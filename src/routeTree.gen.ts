/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestsRouteImport } from './routes/tests/route'
import { Route as ReportsRouteImport } from './routes/reports/route'
import { Route as DoctorsRouteImport } from './routes/doctors/route'
import { Route as CustomersRouteImport } from './routes/customers/route'
import { Route as CombosRouteImport } from './routes/combos/route'
import { Route as RouteImport } from './routes/route'

// Create/Update Routes

const TestsRouteRoute = TestsRouteImport.update({
  path: '/tests',
  getParentRoute: () => rootRoute,
} as any)

const ReportsRouteRoute = ReportsRouteImport.update({
  path: '/reports',
  getParentRoute: () => rootRoute,
} as any)

const DoctorsRouteRoute = DoctorsRouteImport.update({
  path: '/doctors',
  getParentRoute: () => rootRoute,
} as any)

const CustomersRouteRoute = CustomersRouteImport.update({
  path: '/customers',
  getParentRoute: () => rootRoute,
} as any)

const CombosRouteRoute = CombosRouteImport.update({
  path: '/combos',
  getParentRoute: () => rootRoute,
} as any)

const RouteRoute = RouteImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RouteImport
      parentRoute: typeof rootRoute
    }
    '/combos': {
      id: '/combos'
      path: '/combos'
      fullPath: '/combos'
      preLoaderRoute: typeof CombosRouteImport
      parentRoute: typeof rootRoute
    }
    '/customers': {
      id: '/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof CustomersRouteImport
      parentRoute: typeof rootRoute
    }
    '/doctors': {
      id: '/doctors'
      path: '/doctors'
      fullPath: '/doctors'
      preLoaderRoute: typeof DoctorsRouteImport
      parentRoute: typeof rootRoute
    }
    '/reports': {
      id: '/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsRouteImport
      parentRoute: typeof rootRoute
    }
    '/tests': {
      id: '/tests'
      path: '/tests'
      fullPath: '/tests'
      preLoaderRoute: typeof TestsRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  RouteRoute,
  CombosRouteRoute,
  CustomersRouteRoute,
  DoctorsRouteRoute,
  ReportsRouteRoute,
  TestsRouteRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/combos",
        "/customers",
        "/doctors",
        "/reports",
        "/tests"
      ]
    },
    "/": {
      "filePath": "route.tsx"
    },
    "/combos": {
      "filePath": "combos/route.tsx"
    },
    "/customers": {
      "filePath": "customers/route.tsx"
    },
    "/doctors": {
      "filePath": "doctors/route.tsx"
    },
    "/reports": {
      "filePath": "reports/route.tsx"
    },
    "/tests": {
      "filePath": "tests/route.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
